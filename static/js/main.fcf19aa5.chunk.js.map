{"version":3,"sources":["queries/queries.js","components/deal-card/DealCard.js","components/deals-board/DealsBoard.js","components/dashboard/Dashboard.js","components/dashboard-page/DashboardPage.js","components/anonymous-dashboard/AnonymousDashboard.js","components/login-page/LoginPage.js","components/registration-page/RegistrationPage.js","components/navbar/Navbar.js","components/user-info/UserInfo.js","components/detail-page/DetailPage.js","App.js","index.js"],"names":["ONE_PER_STORE_QUERY","gql","DEALS_QUERY","DEAL_BY_ID_QUERY","WHOAMI_QUERY","TOKEN_AUTH_MUTATION","CREATE_USER_MUTATION","storeClassMap","DealCard","dealData","title","storeID","salePrice","normalPrice","thumb","dealID","storeClass","linkClass","content","className","src","alt","to","style","textDecoration","DealsBoard","dealsData","gridClass","length","map","data","Dashboard","variables","useQuery","start","error","loading","fetchMore","deals","dealsList","isEnd","onClick","updateQuery","previousResult","fetchMoreResult","DashboardPage","useState","storeFilterVars","setStoreFilterVars","priceFilterVars","setPriceFilterVars","sortByVars","setSortByVars","htmlFor","id","onChange","e","value","target","console","log","varMap","lowPrice","highPrice","sortBy","AnonymousDashboard","filteredData","filter","LoginPage","username","setUsername","useMutation","tokenAuth","inputUsername","setInputUsername","inputPassword","setInputPassword","useEffect","localStorage","setItem","token","payload","color","onSubmit","preventDefault","password","catch","err","type","RegistrationPage","client","useApolloClient","createUser","passwordMatchError","setPasswordMatchError","loginError","setLoginError","inputConfirmPassword","setInputConfirmPassword","setTimeout","mutate","mutation","then","res","disabled","Navbar","children","UserInfo","isMenuVisible","setMenuVisible","closeMenu","document","removeEventListener","addEventListener","showMenu","stopPropagation","logout","removeItem","Menu","DetailPage","useParams","dealById","steamRatingText","releaseDate","dealRating","width","Date","toLocaleDateString","href","App","query","whoami","exact","path","authLink","ApolloLink","operation","forward","getItem","setContext","headers","authorization","httpLink","HttpLink","uri","credentials","additiveLink","from","apolloClient","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.fcf19aa5.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\n// AnonymousDashboard\nconst ONE_PER_STORE_QUERY = gql`\n  {\n    onePerStore {\n      title\n      storeID\n      salePrice\n      normalPrice\n      thumb\n    }\n  }\n`;\n\n// DefaultContent\nconst DEALS_QUERY = gql`\n  query deals($start: Int, $storeID: String, $lowPrice: Float, $highPrice: Float, $sortBy: String) {\n    deals(start: $start, storeID: $storeID, lowPrice: $lowPrice, highPrice: $highPrice, sortBy: $sortBy) {\n      dealsList {\n        title\n        storeID\n        dealID\n        salePrice\n        normalPrice\n        thumb\n      }\n      isEnd\n    }\n  }\n`;\n\nconst DEAL_BY_ID_QUERY = gql`\n  query dealById($id: String) {\n    dealById(id: $id) {\n      title\n      storeID\n      dealID\n      thumb\n      releaseDate\n      steamRatingText\n      dealRating\n      salePrice\n      normalPrice\n    }\n  }\n`\n\nconst WHOAMI_QUERY = gql`\n  query {\n    whoami\n  }\n`;\n\nconst TOKEN_AUTH_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password){\n            token\n            payload\n        }\n    }\n`\n\nconst CREATE_USER_MUTATION = gql`\n    mutation CreateUser($username: String!, $password: String!){\n        createUser(username: $username, password: $password){\n            userCreationConfirm\n        }\n    }\n`\n\n\nexport { \n  ONE_PER_STORE_QUERY, \n  DEALS_QUERY,\n  WHOAMI_QUERY,\n  TOKEN_AUTH_MUTATION,\n  CREATE_USER_MUTATION,\n  DEAL_BY_ID_QUERY\n};\n","import { Link } from \"react-router-dom\";\nimport \"./DealCard.css\";\n\nconst storeClassMap = {\n  1: \"steam-class\",\n  7: \"gog-class\",\n  11: \"humble-class\",\n};\n\nconst DealCard = ({ dealData }) => {\n  const { title, storeID, salePrice, normalPrice, thumb, dealID } = dealData;\n  const storeClass = storeClassMap[storeID];\n  const linkClass = dealID ? \"link-class\" : \"\";\n\n  const content = (\n    <div className={`${storeClass} ${linkClass} deal-card`}>\n      <div className=\"thumb-container\">\n        <img src={thumb} alt={title + \" image\"}></img>\n      </div>\n      <h3>{title}</h3>\n      <h1>{salePrice}$</h1>\n      <p>Instead of {normalPrice}$</p>\n    </div>\n  );\n\n  return dealID ? (\n    <Link to={`/detail/${dealID}`} style={{ textDecoration: \"none\" }}>\n      {content}\n    </Link>\n  ) : (\n    content\n  );\n};\n\nexport default DealCard;\n","import DealCard from \"../deal-card/DealCard\";\nimport \"./DealsBoard.css\";\n\nexport default function DealsBoard({ dealsData }) {\n  const gridClass = dealsData.length > 3 ? \"dealsboard-4\" : \"dealsboard-3\";\n\n  return (\n    <div className={`dealsboard ${gridClass}`}>\n      {dealsData.map((data) => (\n        <DealCard key={data.title + data.storeID} dealData={data} />\n      ))}\n    </div>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport { DEALS_QUERY } from \"../../queries/queries\";\nimport DealsBoard from \"../deals-board/DealsBoard\";\nimport \"./Dashboard.css\";\n\nexport default function Dashboard({ variables }) {\n  const { data, loading, error, fetchMore } = useQuery(DEALS_QUERY, {\n    variables: {\n      start: 0,\n      ...variables,\n    },\n  });\n\n  // console.log(\"VARIABLES : \", variables);\n\n  const onFetchMore = (start) => {\n    fetchMore({\n      variables: { start, ...variables },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        return {\n          deals: {\n            dealsList: [\n              ...previousResult.deals.dealsList,\n              ...fetchMoreResult.deals.dealsList,\n            ],\n            isEnd: fetchMoreResult.deals.isEnd,\n          },\n        };\n      },\n    });\n  };\n\n  if (error) {\n    return <p>Oops! Something went wrong...</p>;\n  }\n\n  if (data) {\n    const { dealsList, isEnd } = data.deals;\n\n    return (\n      <div>\n        <DealsBoard dealsData={dealsList} className=\"deals-board\" />\n        {!isEnd ? (\n          <button\n            onClick={() => onFetchMore(dealsList.length)}\n            className=\"loadmore-button\"\n          >\n            Load More\n          </button>\n        ) : null}\n      </div>\n    );\n  }\n\n  return <p>Loading...</p>;\n}\n","import { useState } from \"react\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport \"./DashboardPage.css\";\n\nexport default function DashboardPage() {\n  const [storeFilterVars, setStoreFilterVars] = useState({});\n  const [priceFilterVars, setPriceFilterVars] = useState({});\n  const [sortByVars, setSortByVars] = useState({});\n\n  const handleStoreFilterChange = (e) => {\n    const value = e.target.value;\n\n    console.log(\"STORE VALUE: \", value);\n\n    if (value === \"default\") {\n      setStoreFilterVars({});\n    } else {\n      setStoreFilterVars({ storeID: value });\n    }\n  };\n\n  const handlePriceFilterChange = (e) => {\n    const value = e.target.value;\n\n    if (value === \"default\") {\n      setPriceFilterVars({});\n    } else {\n      const varMap = {\n        1: [0, 5],\n        2: [5, 25],\n        3: [25, 400],\n      };\n      setPriceFilterVars({\n        lowPrice: varMap[value][0],\n        highPrice: varMap[value][1],\n      });\n    }\n  };\n\n  const handleSortByChange = (e) => {\n    const value = e.target.value;\n\n    if (value === \"default\") {\n      setSortByVars({});\n    } else {\n      setSortByVars({ sortBy: value });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"dashboard-selection-container\">\n        <div>\n          <label htmlFor=\"store-filter\">Store:</label>\n          <select\n            data-testid=\"store-filter\"\n            id=\"store-filter\"\n            onChange={handleStoreFilterChange}\n          >\n            <option value=\"default\">Any</option>\n            <option value=\"1\">Steam</option>\n            <option value=\"7\">Gog</option>\n            <option value=\"11\">Humble Store</option>\n          </select>\n        </div>\n\n        <div>\n          <label htmlFor=\"price-filter\">Price:</label>\n          <select\n            id=\"price-filter\"\n            data-testid=\"price-filter\"\n            onChange={handlePriceFilterChange}\n          >\n            <option value=\"default\">Any</option>\n            <option value=\"1\">0$ - 5$</option>\n            <option value=\"2\">5$ - 25$</option>\n            <option value=\"3\">more than 25$</option>\n          </select>\n        </div>\n\n        <div>\n          <label htmlFor=\"sort-by\">Sort:</label>\n          <select id=\"sort-by\" data-testid=\"sort\" onChange={handleSortByChange}>\n            <option value=\"default\">Any</option>\n            <option value=\"price\">price</option>\n            <option value=\"savings\">savings</option>\n            <option value=\"dealRating\">deal rating</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"dashboard-container\">\n        <Dashboard\n          variables={{ ...storeFilterVars, ...priceFilterVars, ...sortByVars }}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { ONE_PER_STORE_QUERY } from \"../../queries/queries\";\nimport DealsBoard from \"../deals-board/DealsBoard\";\nimport \"./AnonymousDashboard.css\";\n\nexport default function AnonymousDashboard() {\n  const { data, error, loading } = useQuery(ONE_PER_STORE_QUERY);\n\n  if (loading) {\n    return (\n      <div>\n        <h4>Loading...</h4>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div>\n        <h4>Ops! An error occurred...</h4>\n      </div>\n    );\n  }\n\n  const dealsData = data[\"onePerStore\"];\n  const filteredData = dealsData.filter((e) => e !== null);\n  return (\n    <div className=\"anonymous-dashboard\">\n      <DealsBoard dealsData={filteredData} />\n      <div className=\"buttons-container\">\n        <button className=\"link-button\">\n          <Link to=\"/login\">Login</Link>\n        </button>\n\n        <button className=\"link-button\">\n          <Link to=\"/register\">Register</Link>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import \"./LoginPage.css\";\nimport { useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { TOKEN_AUTH_MUTATION } from \"../../queries/queries\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LoginPage({ username, setUsername }) {\n  const [tokenAuth, { error, data }] = useMutation(TOKEN_AUTH_MUTATION);\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [inputPassword, setInputPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (!(data || error)) {\n      return;\n    }\n\n    if (data) {\n      localStorage.setItem(\"token\", data.tokenAuth.token);\n      setUsername(data.tokenAuth.payload.username);\n    }\n\n    setInputUsername(\"\");\n    setInputPassword(\"\");\n  }, [data, error]);\n\n  if (username) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    tokenAuth({\n      variables: { username: inputUsername, password: inputPassword },\n    }).catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"login-page\">\n      <h1>Login: </h1>\n      {error ? <p style={{ color: \"red\" }}>Wrong Credentials!</p> : null}\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <div>\n          <label>Username: </label>\n          <input\n            type=\"text\"\n            value={inputUsername}\n            onChange={(e) => setInputUsername(e.target.value)}\n          ></input>\n        </div>\n\n        <div>\n          <label>Password: </label>\n          <input\n            type=\"password\"\n            value={inputPassword}\n            onChange={(e) => setInputPassword(e.target.value)}\n          ></input>\n        </div>\n\n        <p>\n          Don't have an account? Register <Link to=\"/register\">here</Link>\n        </p>\n\n        <button type=\"submit\">continue</button>\n      </form>\n    </div>\n  );\n}\n","import { useMutation, useApolloClient } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CREATE_USER_MUTATION,\n  TOKEN_AUTH_MUTATION,\n} from \"../../queries/queries\";\nimport { Link } from \"react-router-dom\";\nimport \"./RegistrationPage.css\";\n\nexport default function RegistrationPage({ username, setUsername }) {\n  const client = useApolloClient(); // per login mutation\n  const [createUser, { error, data }] = useMutation(CREATE_USER_MUTATION);\n  const [passwordMatchError, setPasswordMatchError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [inputConfirmPassword, setInputConfirmPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (!(data || error)) {\n      return;\n    }\n\n    if (data) {\n      setTimeout(() => {\n        client\n          .mutate({\n            mutation: TOKEN_AUTH_MUTATION,\n            variables: {\n              username: inputUsername,\n              password: inputPassword,\n            },\n          })\n          .then((res) => {\n            localStorage.setItem(\"token\", res.data.tokenAuth.token);\n            setUsername(res.data.tokenAuth.payload.username);\n          })\n          .catch((err) => {\n            console.log(err);\n            setLoginError(true);\n          });\n\n        setInputUsername(\"\");\n        setInputPassword(\"\");\n        setInputConfirmPassword(\"\");\n      }, 1000);\n    }\n  }, [data, error]);\n\n  if (username) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputPassword !== inputConfirmPassword) {\n      setPasswordMatchError(true);\n      return;\n    }\n\n    setPasswordMatchError(false);\n\n    createUser({\n      variables: {\n        username: inputUsername,\n        password: inputPassword,\n      },\n    }).catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"registration-page\">\n      <h1>Register:</h1>\n      {error ? <p style={{ color: \"red\" }}>Try something different!</p> : null}\n      {data && !loginError ? (\n        <p style={{ color: \"green\" }}>User Created! Logging In...</p>\n      ) : null}\n      {loginError ? <p style={{ color: \"red\" }}>Unable to login...</p> : null}\n      {passwordMatchError ? (\n        <p style={{ color: \"red\" }}>Confirmation password doesn't match...</p>\n      ) : null}\n      <form onSubmit={handleSubmit} className=\"registration-form\">\n        <div>\n          <label>Username: </label>\n          <input\n            disabled={data ? true : false}\n            type=\"text\"\n            value={inputUsername}\n            onChange={(e) => setInputUsername(e.target.value)}\n          ></input>\n        </div>\n\n        <div>\n          <label>Password: </label>\n          <input\n            disabled={data ? true : false}\n            type=\"password\"\n            value={inputPassword}\n            onChange={(e) => setInputPassword(e.target.value)}\n          ></input>\n        </div>\n\n        <div>\n          <label>Password: </label>\n          <input\n            className={\n              inputConfirmPassword !== inputPassword ? \"red-input\" : \"\"\n            }\n            disabled={data ? true : false}\n            type=\"password\"\n            value={inputConfirmPassword}\n            onChange={(e) => setInputConfirmPassword(e.target.value)}\n          ></input>\n        </div>\n\n        <p>\n          Already have an account? Login <Link to=\"/login\">here</Link>\n        </p>\n\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n","import \"./Navbar.css\";\n\nexport default function Navbar({ children }) {\n  return <div className=\"navbar\">{children}</div>;\n}\n","import { useEffect, useState } from \"react\";\nimport \"./UserInfo.css\";\n\nexport default function UserInfo({ username, setUsername }) {\n  const [isMenuVisible, setMenuVisible] = useState(false);\n\n  const closeMenu = (e) => {\n    e.preventDefault();\n    document.removeEventListener(\"click\", closeMenu);\n    setMenuVisible(false);\n  };\n\n  useEffect(() => {\n    if (isMenuVisible) {\n      document.addEventListener(\"click\", closeMenu);\n    }\n  }, [isMenuVisible]);\n\n  const showMenu = (e) => {\n    e.stopPropagation(); // decidere se chiudere il menu cliccando nuovamente sull'icona dello user\n    e.preventDefault();\n\n    if (isMenuVisible) {\n      return;\n    }\n\n    setMenuVisible(true);\n  };\n\n  const logout = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    localStorage.removeItem(\"token\");\n\n    closeMenu(e);\n    setUsername(\"\");\n  };\n\n  const Menu = () => (\n    <div className=\"userinfo-menu\" onClick={showMenu}>\n      <p className=\"userinfo-name\">{username ? username : \"guest\"}</p>\n      {username ? (\n        <div className=\"userinfo-logout-container\">\n          <i\n            className=\"ri-logout-box-r-line userinfo-logout-btn\"\n            onClick={logout}\n          ></i>\n        </div>\n      ) : null}\n    </div>\n  );\n\n  return (\n    <div>\n      <button className=\"userinfo-btn\" onClick={showMenu}>\n        <i className=\"ri-account-circle-line\"></i>\n      </button>\n\n      {isMenuVisible ? <Menu /> : null}\n    </div>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { DEAL_BY_ID_QUERY } from \"../../queries/queries\";\n\nimport \"./DetailPage.css\";\n\nconst STORE_BASE_URL = \"https://www.cheapshark.com/redirect?dealID=\";\n\nexport default function DetailPage() {\n  const { id } = useParams();\n  const { loading, data, error } = useQuery(DEAL_BY_ID_QUERY, {\n    variables: { id },\n  });\n\n  if (error) {\n    console.log(error);\n    return <p>Oops! Something went wrong...</p>;\n  }\n\n  if (data) {\n    const {\n      title,\n      storeID,\n      thumb,\n      salePrice,\n      normalPrice,\n      steamRatingText,\n      releaseDate,\n      dealRating,\n    } = data.dealById;\n\n    return (\n      <div className=\"detail-page-content\">\n        <img src={thumb} width=\"200px\" />\n        <h1>{title}</h1>\n        <h3>on {{ 1: \"Steam\", 7: \"Gog\", 11: \"Humble Store\" }[storeID]}</h3>\n\n        <div className=\"info-block\">\n          <div className=\"flex-wrapper\">\n            <p>\n              Price: {salePrice}$ <span>Instead of {normalPrice}$</span>\n            </p>\n\n            <p>Deal rating: {dealRating}</p>\n            <p>Game rating: {steamRatingText}</p>\n            {releaseDate > 0 ? (\n              <p>\n                Released:{\" \"}\n                {new Date(releaseDate * 1000).toLocaleDateString(\"en-US\")}\n              </p>\n            ) : null}\n          </div>\n        </div>\n\n        <div>\n          <button>\n            <Link to=\"/\">Back to list</Link>\n          </button>\n          <button>\n            <a href={`${STORE_BASE_URL}${id}`}>Go to store page</a>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return <p>Loading... </p>;\n}\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { WHOAMI_QUERY } from \"./queries/queries\";\n\nimport DashboardPage from \"./components/dashboard-page/DashboardPage\";\nimport AnonymousDashboard from \"./components/anonymous-dashboard/AnonymousDashboard\";\nimport LoginPage from \"./components/login-page/LoginPage\";\nimport RegistrationPage from \"./components/registration-page/RegistrationPage\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport UserInfo from \"./components/user-info/UserInfo\";\n\nimport \"./App.css\";\nimport DetailPage from \"./components/detail-page/DetailPage\";\n\nfunction App() {\n  const [username, setUsername] = useState(null);\n  const client = useApolloClient();\n\n  useEffect(() => {\n    if (username === null) {\n      client\n        .query({\n          query: WHOAMI_QUERY,\n        })\n        .then((res) => {\n          setUsername(res.data.whoami);\n        })\n        .catch((err) => {\n          console.log(err);\n          localStorage.removeItem(\"token\");\n          setUsername(\"\");\n        });\n    }\n  }, []);\n\n  if (username === null) {\n    return <h1></h1>; //checking saved credentials\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <nav>\n          <Navbar>\n            <Link to=\"/\">\n              <h1>Game Deals</h1>\n            </Link>\n            {username ? (\n              <UserInfo username={username} setUsername={setUsername} />\n            ) : null}\n          </Navbar>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/GameDealsDashboard-client\">\n            <Redirect to=\"/\"/>\n          </Route>\n          <Route exact path=\"/\">\n            {username ? <DashboardPage /> : <AnonymousDashboard />}\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage username={username} setUsername={setUsername} />\n          </Route>\n          <Route exact path=\"/register\">\n            <RegistrationPage username={username} setUsername={setUsername} />\n          </Route>\n          <Route path=\"/detail/:id\">\n            <DetailPage />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  ApolloLink,\n  from,\n  HttpLink,\n} from \"@apollo/client\";\n\nconst authLink = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem(\"token\");\n\n  console.log(\"auth link called!\");\n  console.log(operation);\n\n  operation.setContext(({ headers }) => ({\n    headers: {\n      authorization: token ? `JWT ${token}` : \"\",\n      ...headers,\n    },\n  }));\n\n  return forward(operation);\n});\n\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:8000/graphql/\",\n  credentials: \"include\",\n});\n\nconst additiveLink = from([authLink, httpLink]);\n\nconst apolloClient = new ApolloClient({\n  link: additiveLink,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={apolloClient}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}